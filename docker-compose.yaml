services:
  cert-generator:
    image: alpine/openssl
    command: >
      req -x509 -nodes -days 365 -newkey rsa:2048 -keyout certs/local.key -out certs/local.crt  -subj "/CN=*.docker.localhost"
    volumes:
      - certs:/certs
    restart: "no"

  proxy:
    image: traefik:v3.1.2
    command:
      # EntryPoints
      - "--entrypoints.web.address=:8081"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
      - "--entrypoints.websecure.address=:8443"
      - "--entrypoints.websecure.http.tls=true"

      # Attach the static configuration tls.yaml file that contains the tls configuration settings
      - "--providers.file.filename=/dynamic/tls.yaml"

      # Providers 
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=proxy"

      # API & Dashboard 
      - "--api.dashboard=true"
      - "--api.insecure=false"

      # Observability 
      - "--log.level=INFO"
      - "--accesslog=true"
      - "--metrics.prometheus=true"

  # Traefik Dynamic configuration via Docker labels
    labels:
      # Enable self‑routing
      - "traefik.enable=true"

      # Dashboard router
      - "traefik.http.routers.dashboard.rule=Host(`dashboard.docker.localhost`)"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.tls=true"

      # Basic‑auth middleware
      #- "traefik.http.middlewares.dashboard-auth.basicauth.users=<PASTE_HASH_HERE>"
      #- "traefik.http.routers.dashboard.middlewares=dashboard-auth@docker"
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - proxy
    ports:
      - "8081:8081"
      - "8443:8443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - certs:/certs:ro
      - ./dynamic:/dynamic:ro
    depends_on:
      cert-generator:
        condition: service_completed_successfully
  client:
    image: nginx:alpine
    volumes:
      - "./client:/usr/share/nginx/html"
    networks:
      - proxy
    labels:
      traefik.enable: true
      traefik.http.routers.client.rule: "Host(`web.docker.localhost`)"
      traefik.http.routers.client.entrypoints: websecure
      traefik.http.routers.client.tls: true
  whoami:
    image: traefik/whoami
    container_name: whoami
    restart: unless-stopped
    networks:
      - proxy
    labels:
      traefik.enable: true
      traefik.http.routers.whoami.rule: "Host(`whoami.docker.localhost`)"
      traefik.http.routers.whoami.entrypoints: websecure
      traefik.http.routers.whoami.tls: true
      traefik.http.services.whoami.loadbalancer.server.port: 80
volumes:
  certs:
networks:
  proxy:
    name: proxy